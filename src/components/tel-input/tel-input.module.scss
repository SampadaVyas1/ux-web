@import "@/styles/colors";
@import "@/styles/mixins";
$chevron: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'%3E%3Cmask id='mask0_15030_11643' style='mask-type:alpha' maskUnits='userSpaceOnUse' x='0' y='0' width='24' height='24'%3E%3Crect width='24' height='24' fill='%23D9D9D9'/%3E%3C/mask%3E%3Cg mask='url(%23mask0_15030_11643)'%3E%3Cpath d='M11.9916 8.63107C12.1057 8.63107 12.2163 8.6503 12.3233 8.68877C12.4304 8.72724 12.5307 8.79326 12.6243 8.88685L17.1339 13.3964C17.2788 13.5413 17.3486 13.7144 17.3435 13.9157C17.3384 14.117 17.2634 14.29 17.1185 14.4349C16.9736 14.5798 16.798 14.6522 16.5916 14.6522C16.3852 14.6522 16.2096 14.5798 16.0647 14.4349L11.9916 10.3618L7.90311 14.4503C7.75824 14.5951 7.58517 14.665 7.38389 14.6599C7.18262 14.6548 7.00955 14.5798 6.86469 14.4349C6.7198 14.29 6.64736 14.1144 6.64736 13.908C6.64736 13.7016 6.7198 13.5259 6.86469 13.3811L11.3589 8.88685C11.4525 8.79326 11.5512 8.72724 11.6551 8.68877C11.7589 8.6503 11.8711 8.63107 11.9916 8.63107Z' fill='%23DDDDDD'/%3E%3C/g%3E%3C/svg%3E";

.componentContainer {
  width: 100%;
  background: inherit;

  @include flexBox(flex-start, null, column, 0.25rem);
  .input {
    border-radius: 0.25rem;
    @include widthHeight(inherit, 3rem);
    padding: 0.75rem 0.75rem 0.75rem 3.125rem;
    height: 3rem;
    background: inherit;
    @include inputText();
    //reset default input field styles
    @include border($blue-grey-700, 0.06rem, solid);
    outline: none;
    margin: 0;
    box-sizing: border-box;
    &:-webkit-autofill,
    &:-webkit-autofill:hover,
    &:-webkit-autofill:focus,
    &:-webkit-autofill:active {
      -webkit-background-clip: text;
      -webkit-text-fill-color: $grey-100;
      @include border();
      border-radius: 0.25rem;
      transition: background-color 5000s ease-in-out 0s;
      box-shadow: 0 0 0rem 62.5rem $midnight-blue inset;
    }
  }

  //specific classes to modify PhoneInput internal components
  .phoneInput {
    width: inherit;
  }
  .phoneInputContainer {
    box-sizing: border-box;
    background: $midnight-blue;
    @include widthHeight(inherit, 3rem);
    @include border(transparent, 0.06rem, solid);
    border-radius: 0.25rem;
    @include inputText();
    &:not(.errStateContainer):not(:focus):hover {
      background: $dark-slate-grey;
    }
  }
  .errStateContainer {
    @include border($red-400, 0.06rem, solid);
    &:focus {
      @include border($red-400);
    }
  }
  :global(.flag) {
    background-image: url("./flags.png");
    :global(.arrow) {
      top: -110%;
      left: 1rem;
      border: none !important;
      &:global(.arrow:not(.up)::before) {
        content: url($chevron);
        transform: rotate(180deg);
        display: inline-block;
      }
      &:global(.up::before) {
        content: url($chevron);
        transform: translateY(20%);
        display: inline-block;
      }
    }
  }
  .dropdownBtn {
    @include border(none, none, none);
    border-radius: none;
    outline: none;
    position: unset;
    :global(.selected-flag) {
      margin-left: 0.375rem;
      position: absolute;
      top: 0.8125rem;
      height: 1.5rem;
      background: unset !important;
    }
  }
  .dropdownContainer {
    width: 100%;
    @include inputText();
    background: $midnight-blue;
    &::-webkit-scrollbar {
      display: none;
    }
    :global(.country) {
      &:hover {
        background-color: $dark-slate-grey;
      }
    }
    :global(.country.highlight) {
      background-color: $dark-slate-grey;
    }
  }
  .searchContainer {
    padding: 1rem 1rem 0.5rem 1rem !important;
    background: $midnight-blue !important;

    :global(.search-box) {
      margin: unset;
      padding: 0.5rem;
      width: 100%;
      @include inputText();
      background: $midnight-blue;
      border-radius: 0.25rem;
      @include border();
      &:hover {
        background: $dark-slate-grey;
      }
    }
    :global(.search-emoji) {
      display: none !important;
    }
  }
  input {
    @include inputSelection;
  }
}
